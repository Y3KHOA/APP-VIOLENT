import socket
import random as r
import cv2 ,imutils
import base64


BUFF_SIZE = 65536
server_socket = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
server_socket.setsockopt(socket.SOL_SOCKET,socket.SO_RCVBUF,BUFF_SIZE)

host_name = socket.gethostname()
host_ip = socket.gethostbyname(host_name)
print(host_ip)
PORT = 9999
WIDTH = 400
socket_address = (host_ip,PORT)
print('Listening at:',socket_address)

x = ['', '20', '30', '40', '50']
y=[]


s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print('Socket created')

try:
    s.bind((host_ip, PORT))
except socket.error as err:
    print('Bind failed. Error Code : ' .format(err))
s.listen(10)
print("Socket Listening")
conn, addr = s.accept()
vid = cv2.VideoCapture(0)
while(True):
    i = r.randint(0, 4)
    # conn.send(bytes("x : " + x[i] +"\r\n", 'UTF-8'))
    print("Message sent in python")
    data = conn.recv(1024)
    print(data.decode(encoding='UTF-8'))

    _, frame = vid.read()
    frame = imutils.resize(frame, width=WIDTH)
    encoded, buffer = cv2.imencode('.jpg', frame, [cv2.IMWRITE_JPEG_QUALITY, 80])
    message = base64.b64encode(buffer)
    print(message)

    a=str(message)
    k=a.split('\'')
    x.append(k[1])
    print(type(x[0]))
    print(x[0])
    print('x00000000000000000000')
    print(type(x[5]))
    print(x[5])
    print('x5555555555555555555')
    print(type(k[1]))
    print('k111111111111111111')

    # server_socket.sendto(message, addr)

    conn.send(bytes("x : " + x[5] +"\r\n", 'UTF-8'))
    # i = r.randint(0, 5)
    # conn.send(bytes("x : " + x[i] +"\r\n", 'UTF-8'))
    print(x[5])